{
  "name": "Octopus Configuration Language",
  "scopeName": "scope.ocl",
  "fileTypes": ["ocl", "octo"],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#attribute_definition"
    },
    {
      "include": "#block"
    },
    {
      "include": "#expressions"
    }
  ],
  "repository": {
    "literal_values": {
      "patterns": [
        {
          "include": "#numeric_literals"
        },
        {
          "include": "#language_constants"
        },
        {
          "include": "#string_literals"
        },
        {
          "include": "#heredoc"
        }
      ]
    },
    "language_constants": {
      "match": "\\b(true|false|null)\\b",
      "name": "constant.language.ocl"
    },
    "numeric_literals": {
      "patterns": [
        {
          "match": "\\b\\d+\\b",
          "name": "constant.numeric.integer.ocl"
        },
        {
          "match": "\\b\\d+(\\.)\\d+",
          "comment": "Decimals",
          "name": "constant.numeric.float.ocl",
          "captures": {
            "1": {
              "name": "punctuation.separator.decimal.ocl"
            }
          }
        }
      ]
    },
    "string_literals": {
      "begin": "\"",
      "name": "string.qouted.double.ocl",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.ocl"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.ocl"
        }
      },
      "patterns": [
        {
          "include": "#char_escape"
        }
      ]
    },
    "char_escape": {
      "match": "(\\\\r|\\\\n|\\\\t|\\\\\\\\)",
      "name": "constant.character.escape"
    },
    "heredoc": {
      "begin": "(\\<\\<\\-?)\\s*(\\w+)\\s*$",
      "name": "string.unquoted.heredoc.ocl",
      "beginCaptures": {
        "1": {
          "name": "keyword.operator.heredoc.ocl"
        },
        "2": {
          "name": "keyword.control.heredoc.ocl"
        }
      },
      "end": "^\\s*\\2\\s*$",
      "endCaptures": {
        "0": {
          "name": "keyword.control.heredoc.ocl"
        }
      }
    },
    "attribute_definition": {
      "match": "(\\w+)\\s*(=)\\s*",
      "name": "variable.declaration.ocl",
      "captures": {
        "1": {
          "name": "entity.name.variable"
        },
        "2": {
          "name": "keyword.operator.assignment.ocl"
        }
      }
    },
    "comments": {
      "patterns": [
        {
          "include": "#line_comments"
        },
        {
          "include": "#block_comments"
        }
      ]
    },
    "line_comments": {
      "begin": "#|//",
      "name": "comment.line.ocl",
      "captures": {
        "0": {
          "name": "punctuation.definition.comment.ocl"
        }
      },
      "end": "$\\n?"
    },
    "block_comments": {
      "begin": "/\\*",
      "name": "comment.block.ocl",
      "captures": {
        "0": {
          "name": "punctuation.definition.comment.ocl"
        }
      },
      "end": "\\*/"
    },
    "block": {
      "name": "meta.block.ocl",
      "begin": "(\\w+)(?:([\\s\\\"\\-[:word:]]*)(\\{))",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function"
        },
        "2": {
          "patterns": [
            {
              "include": "#string_literals"
            }
          ]
        },
        "3": {
          "name": "punctuation.section.block.begin.ocl"
        }
      },
      "end": "\\}",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.block.end.ocl"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#attribute_definition"
        },
        {
          "include": "#block"
        },
        {
          "include": "#expressions"
        }
      ]
    },
    "expressions": {
      "patterns": [
        {
          "include": "#literal_values"
        }
      ]
    }
  }
}
